a:5:{s:5:"title";s:34:"Дизайн-система Blazor";s:16:"text-format-info";a:2:{s:10:"text-final";s:17152:"<p>DevExpress Blazor — это набор компонентов пользовательского интерфейса. Активно применяется в приложениях на платформе Blazor и предлагает мощный набор компонентов: таблицы данных, календари, планировщики, выпадающие списки, диалоговые окна и многие другие.</p>
<p>Задача — переосмыслить и создать дизайн-систему в Figma на основе существующих артефактов и наработок.</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-1.png" srcset="/images/blog/1x/blazor-1.png 1x, /images/blog/2x/blazor-1@2x.png 2x" class="img-fluid"></div>
</div>
<h2>Вводные</h2>
<p>Blazor продукт развивался и вместе с этим росло количество и сложность компонентов. Раньше дизайнер рисовал отдельный макет под каждую задачу. Не было системного подхода и единых правил. Со временем этот подход начал приносить проблемы:</p>
<ul>
<li>Разработка начала сильно обгонять дизайн.</li>
<li>Многие решения по краевым сценариям стали приниматься разработчиками.</li>
<li>Дизайнер тратил много времени на поиск UI и UX багов на поздних этапах.</li>
<li>Итоговая фича могла сильно отличаться от нарисованного макета.</li>
</ul>
<p>Отдельной проблемой была сложность каждого компонента:</p>
<ul>
<li><b>Разные темы</b>. В разных темах компонент не только меняет цвет, но и начинает обладать другими визуальными свойствами.</li>
<li><b>Несколько размеров</b>. Каждый компонент линейки представлен в трёх размерах.</li>
<li><b>Дополнительные стили</b>. Большой набор стилистических вариантов для компонентов-атомов.</li>
</ul>
<p>Например, одна только кнопка состоит из 150 вариантов компонента:</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-2.png" srcset="/images/blog/1x/blazor-2.png 1x, /images/blog/2x/blazor-2@2x.png 2x" class="img-fluid"></div>
</div>
<p>Было принято решение менять подход — разработать стандарты, правила постановки задач и проектирования.</p>
<h2>Задачи</h2>
<p>Перед новой дизайн-системой поставили следующие задачи:</p>
<ol start="1">
<li><b>Оптимизация работы команды на этапах дизайна и разработки.</b><br />
Раньше, эти процессы были довольно хаотичны. Дизайнер брал в задачу в работу и изображал примерную реализацию компонента. Многие краевые сценарии не учитывались. Какие-то решения в процессе разработки менялись на ходу. В итоге, разработка затягивалась, фичи резались и итоговый результат сильно отличался от исходной картинки.</li>
<li><b>Автоматизация и консистентность</b>.<br />
Большой размер и сложность компонентов сильно затрудняли внесение любых изменений в дизайн. Даже небольшие стилистические изменения в базовом компоненте, типа кнопки, приводили к огромному количеству работы со стороны дизайнера. Так как нужно было учесть разные темы, размеры и стили.</li>
<li><b>Консистентность цвета</b>.<br />
Отдельно стоит отметить проблему с цветом. Многие цвета компонентов в коде рассчитывались с помощью миксинов. Это приводило ко многим проблемам, в том числе, проблемам с контрастностью.</li>
<li><b>Доступность.</b><br />
Пользователи продукта стали всё чаще интересоваться, насколько компоненты доступны для разных категорий пользователей. Нужно было сформировать подход, когда дизайнер на этапе проработки компонента учитывает все WCAG 2.2 AA требования.</li>
<li><b>Централизация знаний.</b><br />
Многие знания о тех или иных дизайн-решениях нигде не фиксировались. Единственным источником знания были участвующие в работе на фичей члены команды. Нужно было сформировать систему документации.</li>
<li><b>UI Kit.</b><br />
Всё чаще стали приходить запросы на UI Kit от пользователей. К тому же, это уже давно было у конкурентов.</li>
</ol>
<h2>Результат</h2>
<h3>Компоненты в Figma переработаны с нуля</h3>
<p>Дизайн компонентов теперь полностью повторяет функционал кодовой реализации. Учтены все редкие сценарии и краевые состояния. Перед отрисовкой каждого компоненты изучались спецификация+API компонента и все сценарии его использования.</p>
<h4><b>Пример реализации компонента Grid</b></h4>
<p>Компонент Grid — один из самых больших и популярных в линейке Blazor. Представляет собой решение для отображения данных в табличном формате. Включает множество функций для управления данными. Например: фильтрация, группировка, пагинация, сортировка и многое другое.</p>
<p>Основную сложность представляет его размер:</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-3.png" srcset="/images/blog/1x/blazor-3.png 1x, /images/blog/2x/blazor-3@2x.png 2x" class="img-fluid"></div>
</div>
<p>Компонент достаточно гибок в настройке. Так как пользователи используют его по-разному. Всё это отражено в дизайне.</p>
<p>Чтобы отрисовать такой компонент в Figma, задачу разбили на этапе:</p>
<ul>
<li>Изучить решения конкурентов.</li>
<li>Изучить и собрать файл со скриншотами всех состояний компонента.</li>
<li>Собрать все под-компоненты.</li>
<li>Собрать итоговый компонент с разными сценариями использования.</li>
</ul>
<p>Собранный в Figma компонент сильно упростил разработку новых фич для грида. Также, упростило создание прототипов для проработки различных сценариев.</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-4.png" srcset="/images/blog/1x/blazor-4.png 1x, /images/blog/2x/blazor-4@2x.png 2x" class="img-fluid"></div>
</div>
<h3>Отрисованы новые компоненты</h3>
<p>Создание новых компонентов включает следующие шаги:</p>
<ul>
<li>Обсудить требования с ПМом.</li>
<li>Исследовать решения на рынке.</li>
<li>Утвердить список фич.</li>
<li>Найти грамотный подход по клавиатурной навигации (поддержка A11Y).</li>
<li>Отрисовать компонент и все его составляющие.</li>
<li>Описать компонент в дизайн-токенах.</li>
<li>Проработать сценарии для демо-стендов.</li>
</ul>
<h4><b>Пример реализации компонента TreeList</b></h4>
<p>Компонент TreeList — показывает табличные данные в виде древовидной структуры. Пользователи могут сворачивать и разворачивать данные, как им удобно.</p>
<p>При подготовке к работе был произведен ресёрч конкурентов, собран список идей и их примерные способы реализации. На каждом этапе приходили синхронизационные встречи с менеджером продукта, разработчиками и другими заинтересованными лицами:</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-5.png" srcset="/images/blog/1x/blazor-5.png 1x, /images/blog/2x/blazor-5@2x.png 2x" class="img-fluid"></div>
</div>
<p>Собранный в Figma компонент учитывает все сценарии использовании и состоянии:</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-6.png" srcset="/images/blog/1x/blazor-6.png 1x, /images/blog/2x/blazor-6@2x.png 2x" class="img-fluid"></div>
</div>
<h2><b>Токенизация</b></h2>
<p>Каждый компонент представлен в разных темах. Руками отрисовать или исправлять компонент в каждой теме очень дорого и ресурсозатратно.</p>
<p>Было принято решение использовать дизайн-токены:</p>
<ul>
<li>Чтобы быстро обновлять стили компонента под любую тему.</li>
<li>Гарантировать единообразие решений.</li>
<li>Использовать токены как мостик между дизайном и разработкой.</li>
</ul>
<p>Была проведена большая работа над созданием архитектуры и структуры дизайн-токенов:</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-7.png" srcset="/images/blog/1x/blazor-7.png 1x, /images/blog/2x/blazor-7@2x.png 2x" class="img-fluid"></div>
</div>
<p>Каждый компонент имеет полное покрытие токенами:</p>
<ul>
<li>color,</li>
<li>font-weight,</li>
<li>letter-spacing,</li>
<li>line-height,</li>
<li>border-radius,</li>
<li>border-width,</li>
<li>font-size,</li>
<li>text-transform,</li>
<li>opacity,</li>
<li>box-shadow,</li>
<li>size.</li>
</ul>
<p>Такой подход позволяет быстро создавать новые темы, просто выставляя новые значения в токенах. Для работы использовался плагин Tokens Studio for Figma. Потому что он позволяет покрыть большое количество типов токенов, в отличии от встроенного Figma Variables.</p>
<p>В итоге, любой компонент в Figma легко протестировать с другими стилистическими настройками. А разработчики могут передавать значения токенов из Figma напрямую в свои стили.</p>
<h2><b>Документирование</b></h2>
<p>Дизайн-система описывает себя тремя основными способами:</p>
<ul>
<li><b>Компоненты и сценарии в Figma.</b> Главная точка входа в дизайн-систему.</li>
<li><b>Дизайн-токены.</b> Служат мостом между дизайном и кодом.</li>
<li><b>Внутренняя документация.</b> Содержит договоренности и рекомендации по разным аспектам дизайна: правила наименования, структура токенов, правила отрисовки иконок и так далее. Тут же можно найти результаты ресёрчей относящихся к различным дизайн-задачам.</li>
</ul>
<h2><b>UI Kit</b></h2>
<p>Одним из результатов работы над дизайн-системой стал выпуск UI кита в Figma.</p>
<div class="e2-text-picture">
<div style="width: 2560px; max-width: 100%"><div class="e2-text-proportional-wrapper" style="padding-bottom: 0.39%"><img src="https://maximpetrov.ru/blog/pictures/empty-image.jpg" width="2560" height="10" alt="" />
</div></div><div class="e2-text-caption"><img src="/images/blog/1x/blazor-8.png" srcset="/images/blog/1x/blazor-8.png 1x, /images/blog/2x/blazor-8@2x.png 2x" class="img-fluid"></div>
</div>
<h2><b>Результаты</b></h2>
<ul>
<li>Получилось собрать крепкий каркас дизайн-системы в Figma.</li>
<li>Сильно улучшилась коммуникация дизайна и продукт-менеджеров.
<ul>
  <li>Появились еженедельные созвоны с продукт-менеджерами.</li>
  <li>Работа над задачами стала идти быстрее, на всех этапах.</li>
</ul>
</li>
<li>Работа между дизайном и разработкой стала эффективнее.
<ul>
  <li>Макеты стали намного подробнее.</li>
  <li>Дополнительный слой информации передают дизайн-токены.</li>
</ul>
</li>
<li>Появилась внутренняя документация.</li>
<li>Пользователи получили UI kit.</li>
</ul>
";s:4:"meta";a:2:{s:14:"links-required";a:0:{}s:18:"resources-detected";a:9:{i:0;s:28:"/images/blog/1x/blazor-1.png";i:1;s:28:"/images/blog/1x/blazor-2.png";i:2;s:28:"/images/blog/1x/blazor-3.png";i:3;s:28:"/images/blog/1x/blazor-4.png";i:4;s:28:"/images/blog/1x/blazor-5.png";i:5;s:28:"/images/blog/1x/blazor-6.png";i:6;s:28:"/images/blog/1x/blazor-7.png";i:7;s:28:"/images/blog/1x/blazor-8.png";i:8;s:15:"empty-image.jpg";}}}s:7:"summary";s:289:"DevExpress Blazor — это набор компонентов пользовательского интерфейса. Активно применяется в приложениях на платформе Blazor и предлагает мощный набор компонентов";s:14:"comments-count";i:0;s:9:"tags-data";a:2:{s:5:"ctree";a:1:{i:0;a:3:{s:8:"visible?";b:1;s:4:"name";s:6:"Blazor";s:4:"href";s:42:"https://maximpetrov.ru/blog/tags/blazor-2/";}}s:20:"all-resnames-uploads";a:0:{}}}